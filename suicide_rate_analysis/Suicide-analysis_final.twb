<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20194.20.0125.0835                               -->
<workbook original-version='18.1' source-build='2019.4.3 (20194.20.0125.0835)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='master' inline='true' name='federated.0fltxsv0w6481v11903aw0ay0swc' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='master' name='textscan.0tnt5oz1fg24oh1b4xa1o1rnc5l9'>
            <connection class='textscan' directory='C:/Users/diksh/EVERYTHING/Desktop/BDDS_project' filename='master.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0tnt5oz1fg24oh1b4xa1o1rnc5l9' name='master.csv' table='[master#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='country' ordinal='0' />
            <column datatype='integer' name='year' ordinal='1' />
            <column datatype='string' name='sex' ordinal='2' />
            <column datatype='string' name='age' ordinal='3' />
            <column datatype='integer' name='suicides_no' ordinal='4' />
            <column datatype='integer' name='population' ordinal='5' />
            <column datatype='real' name='suicides/100k pop' ordinal='6' />
            <column datatype='string' name='country-year' ordinal='7' />
            <column datatype='real' name='HDI for year' ordinal='8' />
            <column datatype='integer' name='gdp_for_year ($) ' ordinal='9' />
            <column datatype='integer' name='gdp_per_capita ($)' ordinal='10' />
            <column datatype='string' name='generation' ordinal='11' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[master.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[master.csv]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[master.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sex</remote-name>
            <remote-type>129</remote-type>
            <local-name>[sex]</local-name>
            <parent-name>[master.csv]</parent-name>
            <remote-alias>sex</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>age</remote-name>
            <remote-type>129</remote-type>
            <local-name>[age]</local-name>
            <parent-name>[master.csv]</parent-name>
            <remote-alias>age</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>suicides_no</remote-name>
            <remote-type>20</remote-type>
            <local-name>[suicides_no]</local-name>
            <parent-name>[master.csv]</parent-name>
            <remote-alias>suicides_no</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[master.csv]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>suicides/100k pop</remote-name>
            <remote-type>5</remote-type>
            <local-name>[suicides/100k pop]</local-name>
            <parent-name>[master.csv]</parent-name>
            <remote-alias>suicides/100k pop</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country-year</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country-year]</local-name>
            <parent-name>[master.csv]</parent-name>
            <remote-alias>country-year</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HDI for year</remote-name>
            <remote-type>5</remote-type>
            <local-name>[HDI for year]</local-name>
            <parent-name>[master.csv]</parent-name>
            <remote-alias>HDI for year</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gdp_for_year ($) </remote-name>
            <remote-type>20</remote-type>
            <local-name>[gdp_for_year ($) ]</local-name>
            <parent-name>[master.csv]</parent-name>
            <remote-alias>gdp_for_year ($) </remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gdp_per_capita ($)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[gdp_per_capita ($)]</local-name>
            <parent-name>[master.csv]</parent-name>
            <remote-alias>gdp_per_capita ($)</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>generation</remote-name>
            <remote-type>129</remote-type>
            <local-name>[generation]</local-name>
            <parent-name>[master.csv]</parent-name>
            <remote-alias>generation</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.0fltxsv0w6481v11903aw0ay0swc]&quot;' value='GDP' />
        </aliases>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Age' datatype='string' name='[age]' role='dimension' type='nominal' />
      <column aggregation='None' caption='Country-Year' datatype='string' name='[country-year]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column aggregation='None' caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Gdp For Year ($)' datatype='integer' name='[gdp_for_year ($) ]' role='dimension' type='quantitative' />
      <column caption='Gdp Per Capita ($)' datatype='integer' name='[gdp_per_capita ($)]' role='measure' type='quantitative' />
      <column caption='Generation' datatype='string' name='[generation]' role='dimension' type='nominal' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <column caption='Sex' datatype='string' name='[sex]' role='dimension' type='nominal' />
      <column caption='Suicides/100K Pop' datatype='real' name='[suicides/100k pop]' role='measure' type='quantitative' />
      <column caption='Suicides No' datatype='integer' name='[suicides_no]' role='measure' type='quantitative' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <column-instance column='[suicides/100k pop]' derivation='Avg' name='[avg:suicides/100k pop:qk]' pivot='key' type='quantitative' />
      <column-instance column='[gdp_for_year ($) ]' derivation='None' name='[none:gdp_for_year ($) :ok]' pivot='key' type='ordinal' />
      <column-instance column='[gdp_for_year ($) ]' derivation='None' name='[none:gdp_for_year ($) :qk]' pivot='key' type='quantitative' />
      <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
      <column-instance column='[gdp_per_capita ($)]' derivation='Sum' name='[sum:gdp_per_capita ($):qk]' pivot='key' type='quantitative' />
      <column-instance column='[population]' derivation='Sum' name='[sum:population:qk]' pivot='key' type='quantitative' />
      <column-instance column='[suicides/100k pop]' derivation='Sum' name='[sum:suicides/100k pop:qk]' pivot='key' type='quantitative' />
      <column-instance column='[suicides_no]' derivation='Sum' name='[sum:suicides_no:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Gdp For Year ($),Year)' hidden='true' name='[Action (Gdp For Year ($),Year)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:gdp_for_year ($) :ok]' />
          <groupfilter function='level-members' level='[none:year:ok]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.482143' measure-ordering='alphabetic' measure-percentage='0.517857' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0fltxsv0w6481v11903aw0ay0swc]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0fltxsv0w6481v11903aw0ay0swc].[sum:population:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0fltxsv0w6481v11903aw0ay0swc].[avg:suicides/100k pop:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0fltxsv0w6481v11903aw0ay0swc].[sum:suicides/100k pop:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0fltxsv0w6481v11903aw0ay0swc].[sum:gdp_per_capita ($):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0fltxsv0w6481v11903aw0ay0swc].[none:gdp_for_year ($) :qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0fltxsv0w6481v11903aw0ay0swc].[sum:suicides_no:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Japan_gdp'>
      <layout-options>
        <title>
          <formatted-text>
            <run>GDP vs Number of Suicides (Japan)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='master' name='federated.0fltxsv0w6481v11903aw0ay0swc' />
          </datasources>
          <datasource-dependencies datasource='federated.0fltxsv0w6481v11903aw0ay0swc'>
            <column aggregation='None' caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Gdp For Year ($)' datatype='integer' name='[gdp_for_year ($) ]' role='dimension' type='quantitative' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[gdp_for_year ($) ]' derivation='None' name='[none:gdp_for_year ($) :qk]' pivot='key' type='quantitative' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column caption='Suicides No' datatype='integer' name='[suicides_no]' role='measure' type='quantitative' />
            <column-instance column='[suicides_no]' derivation='Sum' name='[sum:suicides_no:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0fltxsv0w6481v11903aw0ay0swc].[none:country:nk]'>
            <groupfilter function='member' level='[none:country:nk]' member='&quot;Japan&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0fltxsv0w6481v11903aw0ay0swc].[none:year:qk]' included-values='in-range'>
            <min>1985</min>
            <max>2015</max>
          </filter>
          <slices>
            <column>[federated.0fltxsv0w6481v11903aw0ay0swc].[none:country:nk]</column>
            <column>[federated.0fltxsv0w6481v11903aw0ay0swc].[none:year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0fltxsv0w6481v11903aw0ay0swc].[sum:suicides_no:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0fltxsv0w6481v11903aw0ay0swc].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0fltxsv0w6481v11903aw0ay0swc].[none:gdp_for_year ($) :qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0fltxsv0w6481v11903aw0ay0swc].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0fltxsv0w6481v11903aw0ay0swc].[sum:suicides_no:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0fltxsv0w6481v11903aw0ay0swc].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0fltxsv0w6481v11903aw0ay0swc].[none:gdp_for_year ($) :qk] + [federated.0fltxsv0w6481v11903aw0ay0swc].[sum:suicides_no:qk])</rows>
        <cols>[federated.0fltxsv0w6481v11903aw0ay0swc].[none:year:qk]</cols>
      </table>
      <simple-id uuid='{952BB6A1-54AF-4F91-B8F2-0D4B9B83DDC0}' />
    </worksheet>
    <worksheet name='Japan_suicide_nums'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Japan suicide numbers over time</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='master' name='federated.0fltxsv0w6481v11903aw0ay0swc' />
          </datasources>
          <datasource-dependencies datasource='federated.0fltxsv0w6481v11903aw0ay0swc'>
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
            <column-instance column='[population]' derivation='Sum' name='[sum:population:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0fltxsv0w6481v11903aw0ay0swc].[none:year:qk]' included-values='in-range'>
            <min>1985</min>
            <max>2015</max>
          </filter>
          <slices>
            <column>[federated.0fltxsv0w6481v11903aw0ay0swc].[none:year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='user' />
                <format attr='font-size' value='8' />
                <format attr='color' value='#000000' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-color' value='#e15759' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0fltxsv0w6481v11903aw0ay0swc].[sum:population:qk]</rows>
        <cols>[federated.0fltxsv0w6481v11903aw0ay0swc].[none:year:qk]</cols>
      </table>
      <simple-id uuid='{FD48075D-3C2C-4AF8-BB9A-E95FABEECFD1}' />
    </worksheet>
    <worksheet name='Korea_gdp'>
      <layout-options>
        <title>
          <formatted-text>
            <run>GDP vs Number of Suicides (Korea)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='master' name='federated.0fltxsv0w6481v11903aw0ay0swc' />
          </datasources>
          <datasource-dependencies datasource='federated.0fltxsv0w6481v11903aw0ay0swc'>
            <column aggregation='None' caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Gdp For Year ($)' datatype='integer' name='[gdp_for_year ($) ]' role='dimension' type='quantitative' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[gdp_for_year ($) ]' derivation='None' name='[none:gdp_for_year ($) :qk]' pivot='key' type='quantitative' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column caption='Suicides No' datatype='integer' name='[suicides_no]' role='measure' type='quantitative' />
            <column-instance column='[suicides_no]' derivation='Sum' name='[sum:suicides_no:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0fltxsv0w6481v11903aw0ay0swc].[none:country:nk]'>
            <groupfilter function='member' level='[none:country:nk]' member='&quot;Russian Federation&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0fltxsv0w6481v11903aw0ay0swc].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0fltxsv0w6481v11903aw0ay0swc].[sum:suicides_no:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0fltxsv0w6481v11903aw0ay0swc].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='line-interpolation' value='linear' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0fltxsv0w6481v11903aw0ay0swc].[none:gdp_for_year ($) :qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <size column='[federated.0fltxsv0w6481v11903aw0ay0swc].[sum:suicides_no:qk]' />
              <color column='[federated.0fltxsv0w6481v11903aw0ay0swc].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#e15759' />
                <format attr='line-interpolation' value='linear' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0fltxsv0w6481v11903aw0ay0swc].[sum:suicides_no:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <lod column='[federated.0fltxsv0w6481v11903aw0ay0swc].[sum:suicides_no:qk]' />
              <color column='[federated.0fltxsv0w6481v11903aw0ay0swc].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#4e79a7' />
                <format attr='mark-markers-mode' value='all' />
                <format attr='line-interpolation' value='linear' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0fltxsv0w6481v11903aw0ay0swc].[none:gdp_for_year ($) :qk] + [federated.0fltxsv0w6481v11903aw0ay0swc].[sum:suicides_no:qk])</rows>
        <cols>[federated.0fltxsv0w6481v11903aw0ay0swc].[none:year:qk]</cols>
      </table>
      <simple-id uuid='{57D50E2C-E7E6-4DE4-9A52-94E617087A18}' />
    </worksheet>
    <worksheet name='Sheet 8'>
      <layout-options>
        <title>
          <formatted-text>
            <run>GDP vs Number of Suicides (Russia)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='master' name='federated.0fltxsv0w6481v11903aw0ay0swc' />
          </datasources>
          <datasource-dependencies datasource='federated.0fltxsv0w6481v11903aw0ay0swc'>
            <column aggregation='None' caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Gdp Per Capita ($)' datatype='integer' name='[gdp_per_capita ($)]' role='measure' type='quantitative' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column caption='Suicides No' datatype='integer' name='[suicides_no]' role='measure' type='quantitative' />
            <column-instance column='[gdp_per_capita ($)]' derivation='Sum' name='[sum:gdp_per_capita ($):qk]' pivot='key' type='quantitative' />
            <column-instance column='[suicides_no]' derivation='Sum' name='[sum:suicides_no:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0fltxsv0w6481v11903aw0ay0swc].[none:country:nk]'>
            <groupfilter function='member' level='[none:country:nk]' member='&quot;Russian Federation&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0fltxsv0w6481v11903aw0ay0swc].[none:year:qk]' included-values='in-range'>
            <min>1985</min>
            <max>2015</max>
          </filter>
          <slices>
            <column>[federated.0fltxsv0w6481v11903aw0ay0swc].[none:year:qk]</column>
            <column>[federated.0fltxsv0w6481v11903aw0ay0swc].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0fltxsv0w6481v11903aw0ay0swc].[sum:suicides_no:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0fltxsv0w6481v11903aw0ay0swc].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='line-interpolation' value='linear' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0fltxsv0w6481v11903aw0ay0swc].[sum:gdp_per_capita ($):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0fltxsv0w6481v11903aw0ay0swc].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='line-interpolation' value='linear' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0fltxsv0w6481v11903aw0ay0swc].[sum:suicides_no:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0fltxsv0w6481v11903aw0ay0swc].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='line-interpolation' value='linear' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0fltxsv0w6481v11903aw0ay0swc].[sum:gdp_per_capita ($):qk] + [federated.0fltxsv0w6481v11903aw0ay0swc].[sum:suicides_no:qk])</rows>
        <cols>[federated.0fltxsv0w6481v11903aw0ay0swc].[none:year:qk]</cols>
      </table>
      <simple-id uuid='{34ACE48B-9580-494C-B024-042E185B8A5A}' />
    </worksheet>
    <worksheet name='U.S._gdp'>
      <layout-options>
        <title>
          <formatted-text>
            <run>GDP vs Number of Suicides (USA)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='master' name='federated.0fltxsv0w6481v11903aw0ay0swc' />
          </datasources>
          <datasource-dependencies datasource='federated.0fltxsv0w6481v11903aw0ay0swc'>
            <column aggregation='None' caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Gdp For Year ($)' datatype='integer' name='[gdp_for_year ($) ]' role='dimension' type='quantitative' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[gdp_for_year ($) ]' derivation='None' name='[none:gdp_for_year ($) :qk]' pivot='key' type='quantitative' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column caption='Suicides No' datatype='integer' name='[suicides_no]' role='measure' type='quantitative' />
            <column-instance column='[suicides_no]' derivation='Sum' name='[sum:suicides_no:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0fltxsv0w6481v11903aw0ay0swc].[none:country:nk]'>
            <groupfilter function='member' level='[none:country:nk]' member='&quot;United States&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0fltxsv0w6481v11903aw0ay0swc].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0fltxsv0w6481v11903aw0ay0swc].[sum:suicides_no:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0fltxsv0w6481v11903aw0ay0swc].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0fltxsv0w6481v11903aw0ay0swc].[none:gdp_for_year ($) :qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0fltxsv0w6481v11903aw0ay0swc].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0fltxsv0w6481v11903aw0ay0swc].[sum:suicides_no:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0fltxsv0w6481v11903aw0ay0swc].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0fltxsv0w6481v11903aw0ay0swc].[none:gdp_for_year ($) :qk] + [federated.0fltxsv0w6481v11903aw0ay0swc].[sum:suicides_no:qk])</rows>
        <cols>[federated.0fltxsv0w6481v11903aw0ay0swc].[none:year:qk]</cols>
      </table>
      <simple-id uuid='{20A0E059-6089-419F-8EB2-7CBFDF79A400}' />
    </worksheet>
    <worksheet name='US-yearly-suicide-nums'>
      <layout-options>
        <title>
          <formatted-text>
            <run>US yearly suicide numbers</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='master' name='federated.0fltxsv0w6481v11903aw0ay0swc' />
          </datasources>
          <datasource-dependencies datasource='federated.0fltxsv0w6481v11903aw0ay0swc'>
            <column aggregation='None' caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column caption='Suicides No' datatype='integer' name='[suicides_no]' role='measure' type='quantitative' />
            <column-instance column='[suicides_no]' derivation='Sum' name='[sum:suicides_no:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0fltxsv0w6481v11903aw0ay0swc].[none:country:nk]'>
            <groupfilter function='member' level='[none:country:nk]' member='&quot;United States&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0fltxsv0w6481v11903aw0ay0swc].[none:year:qk]' included-values='in-range'>
            <min>1985</min>
            <max>2015</max>
          </filter>
          <slices>
            <column>[federated.0fltxsv0w6481v11903aw0ay0swc].[none:country:nk]</column>
            <column>[federated.0fltxsv0w6481v11903aw0ay0swc].[none:year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#e15759' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0fltxsv0w6481v11903aw0ay0swc].[sum:suicides_no:qk]</rows>
        <cols>[federated.0fltxsv0w6481v11903aw0ay0swc].[none:year:qk]</cols>
      </table>
      <simple-id uuid='{CBFFA453-1714-407F-BCF7-F9BFB94BEFFC}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Korea_gdp'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.0fltxsv0w6481v11903aw0ay0swc].[sum:suicides_no:qk]' type='size' />
            <card pane-specification-id='4' param='[federated.0fltxsv0w6481v11903aw0ay0swc].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0fltxsv0w6481v11903aw0ay0swc].[none:country-year:nk]</field>
            <field>[federated.0fltxsv0w6481v11903aw0ay0swc].[none:country:nk]</field>
            <field>[federated.0fltxsv0w6481v11903aw0ay0swc].[none:gdp_for_year ($) :qk]</field>
            <field>[federated.0fltxsv0w6481v11903aw0ay0swc].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1574D8F2-923E-4100-9F7F-952934178A2F}' />
    </window>
    <window class='worksheet' name='U.S._gdp'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0fltxsv0w6481v11903aw0ay0swc].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0fltxsv0w6481v11903aw0ay0swc].[none:country:nk]</field>
            <field>[federated.0fltxsv0w6481v11903aw0ay0swc].[none:gdp_for_year ($) :qk]</field>
            <field>[federated.0fltxsv0w6481v11903aw0ay0swc].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F3541343-3824-4792-8CE4-7DBA7C18A693}' />
    </window>
    <window class='worksheet' name='Japan_gdp'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0fltxsv0w6481v11903aw0ay0swc].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0fltxsv0w6481v11903aw0ay0swc].[none:country:nk]</field>
            <field>[federated.0fltxsv0w6481v11903aw0ay0swc].[none:gdp_for_year ($) :qk]</field>
            <field>[federated.0fltxsv0w6481v11903aw0ay0swc].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E4884A8C-8AA1-482A-97D4-0292B0416705}' />
    </window>
    <window class='worksheet' name='Japan_suicide_nums'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0fltxsv0w6481v11903aw0ay0swc].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D7C967F7-B0EF-4E3C-9410-FCB1757C235F}' />
    </window>
    <window class='worksheet' name='US-yearly-suicide-nums'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0fltxsv0w6481v11903aw0ay0swc].[none:country:nk]</field>
            <field>[federated.0fltxsv0w6481v11903aw0ay0swc].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{368C0EE0-E89C-4E5E-AA11-7EFC9C380235}' />
    </window>
    <window class='worksheet' maximized='true' name='Sheet 8'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0fltxsv0w6481v11903aw0ay0swc].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0fltxsv0w6481v11903aw0ay0swc].[none:country:nk]</field>
            <field>[federated.0fltxsv0w6481v11903aw0ay0swc].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{467F9F8A-5CE1-41A2-BC55-E4BAB08EDBA9}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Japan_gdp' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Japan_suicide_nums' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Korea_gdp' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 8' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='U.S._gdp' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='US-yearly-suicide-nums' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
